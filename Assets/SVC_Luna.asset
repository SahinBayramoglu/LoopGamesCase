%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: -777816280, guid: a1279b40ccc3e8f40b0ae8fa5cd9f060, type: 3}
  m_Name: SVC_Luna
  m_EditorClassIdentifier: 
  _svcLunaVersion: 2
  _shaderVariants:
  - shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 4800000, guid: 091cc9a445340c04bbcfbc65c0bef43f, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 4800000, guid: efcd8dda2a6b7f9429d89ff2b5d7ebbe, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 4800000, guid: 416d7cfe5d2da4988959de9a6c288abc, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 4800000, guid: 416d7cfe5d2da4988959de9a6c288abc, type: 3}
    passType: 0
    passId: 1
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - PIXELSNAP_ON
  - shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 2
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 2
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - _ALPHABLEND_ON
  - shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - UNITY_UI_ALPHACLIP
  - shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - UNITY_UI_CLIP_RECT
  - shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  _usedByLunaBuild:
  - shader: {fileID: 4800000, guid: 091cc9a445340c04bbcfbc65c0bef43f, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 2
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
  - shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  _includedShaderVariants: []
  _excludedShaderVariants: []
  version: 260
  _shaderParsedShaders:
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderName: Hidden/BlitCopy
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Color;\nUNITY_LOCATION(0) uniform
            highp sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvoid main()\n{\n   
            u_xlat0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0
            * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        definedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        keywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 33
        PlatformMask: -1
      Tags: []
      UsePass: 0
    Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    shaderCompilerPlatform: 9
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderName: Hidden/InternalErrorShader
        ShaderVariants: []
        definedKeywords: []
        keywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 227
        PlatformMask: 32
      Tags: []
      UsePass: 0
    Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
    ShaderPath: Library/unity default resources
    ShaderDefinedKeywords: []
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    shaderCompilerPlatform: 9
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderName: Legacy Shaders/VertexLit
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tivec4
            unity_VertexLightParams;\nuniform \tvec4 _MainTex_ST;\nin highp vec3
            in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec3 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec3 vs_COLOR1;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3
            u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<unity_VertexLightParams.x ; u_xlati_loop_1++)\n   
            {\n        u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec3 vs_COLOR1;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.xyz = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        definedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        keywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - POINT
          - SPOT
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: Vertex
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 1
        PlatformMask: -1
      - ShaderName: Legacy Shaders/VertexLit
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 unity_LightmapST;\nuniform \tvec4 unity_Lightmap_ST;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin highp vec3 in_TEXCOORD1;\nin
            highp vec3 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec2
            vs_TEXCOORD1;\nout highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy
            + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D unity_Lightmap;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec2 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n   
            u_xlat16_1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD2.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        definedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        keywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: VertexLM
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 1
        PlatformMask: -1
      - ShaderName: Legacy Shaders/VertexLit
        ShaderVariants: []
        definedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        keywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 1
        PlatformMask: -1
      Tags:
      - Key: RenderType
        Value: Opaque
      UsePass: 0
    Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - POINT
    - SPOT
    - SHADOWS_DEPTH
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - INSTANCING_ON
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    shaderCompilerPlatform: 9
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderName: Particles/Standard Unlit
        ShaderVariants: []
        definedKeywords: []
        keywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: GRABPASS
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: _GrabTexture
        PassShaderRequirements: 227
        PlatformMask: 32
      - ShaderName: Particles/Standard Unlit
        ShaderVariants: []
        definedKeywords:
        - INSTANCING_ON
        - PROCEDURAL_INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _REQUIRE_UV2
        - __
        - _
        keywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          - PROCEDURAL_INSTANCING_ON
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          - _ALPHAMODULATE_ON
        - Keywords:
          - _
          - _REQUIRE_UV2
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: PreviewType
          Value: Plane
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 33
        PlatformMask: -1
      - ShaderName: Particles/Standard Unlit
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD1;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat16_1.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat0.xyz = u_xlat16_1.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 2
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PerformanceChecks
            Value: False
          - Key: PreviewType
            Value: Plane
          - Key: RenderType
            Value: Opaque
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD1;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n    u_xlat16_0 =
            texture(_MainTex, vs_TEXCOORD1.xy);\n    u_xlat16_0 = u_xlat16_0 * _Color;\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 2
          SubShaderIndex: 0
          Keywords:
          - _ALPHABLEND_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PerformanceChecks
            Value: False
          - Key: PreviewType
            Value: Plane
          - Key: RenderType
            Value: Opaque
        definedKeywords:
        - EFFECT_BUMP
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - PROCEDURAL_INSTANCING_ON
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _COLORADDSUBDIFF_ON
        - _COLORCOLOR_ON
        - _COLOROVERLAY_ON
        - _EMISSION
        - _FADING_ON
        - _NORMALMAP
        - _REQUIRE_UV2
        - __
        - _
        keywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          - PROCEDURAL_INSTANCING_ON
        - Keywords:
          - _
          - _REQUIRE_UV2
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 4
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PerformanceChecks
          Value: False
        - Key: PreviewType
          Value: Plane
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 33
        PlatformMask: -1
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PerformanceChecks
        Value: False
      - Key: PreviewType
        Value: Plane
      - Key: RenderType
        Value: Opaque
      UsePass: 0
    Shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - SHADOWS_DEPTH
    - _ALPHABLEND_ON
    - _ALPHAMODULATE_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _REQUIRE_UV2
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - _COLORADDSUBDIFF_ON
    - _COLORCOLOR_ON
    - _COLOROVERLAY_ON
    - _EMISSION
    - _FADING_ON
    - _NORMALMAP
    - INSTANCING_ON
    - PROCEDURAL_INSTANCING_ON
    - SHADOWS_CUBE
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - _
    - EFFECT_BUMP
    - SOFTPARTICLES_ON
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    shaderCompilerPlatform: 9
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderName: ScratchCard/Brush
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec4
            in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    vs_TEXCOORD1
            = u_xlat0;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Color;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out highp vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    SV_Target0 = u_xlat16_0
            * _Color;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        definedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        keywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 33
        PlatformMask: -1
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
      UsePass: 0
    Shader: {fileID: 4800000, guid: efcd8dda2a6b7f9429d89ff2b5d7ebbe, type: 3}
    ShaderPath: Assets/ScratchCard/Shaders/Brush.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    shaderCompilerPlatform: 9
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderName: ScratchCard/Mask
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Offset;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D
            _MaskTex;\nin mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out highp vec4 SV_Target0;\nfloat u_xlat0;\nmediump float u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec2 u_xlat2;\nvoid main()\n{\n    u_xlat16_0 = texture(_MaskTex,
            vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat16_0) + 1.0;\n    u_xlat2.xy
            = vs_TEXCOORD0.xy * _Offset.zw + _Offset.xy;\n    u_xlat16_1 = texture(_MainTex,
            u_xlat2.xy);\n    u_xlat2.x = u_xlat16_1.w * vs_COLOR0.w;\n    SV_Target0.xyz
            = u_xlat16_1.xyz * vs_COLOR0.xyz;\n    SV_Target0.w = u_xlat0 * u_xlat2.x;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        definedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        keywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 33
        PlatformMask: -1
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
      UsePass: 0
    Shader: {fileID: 4800000, guid: 091cc9a445340c04bbcfbc65c0bef43f, type: 3}
    ShaderPath: Assets/ScratchCard/Shaders/Mask.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    shaderCompilerPlatform: 9
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderName: ScratchCard/MaskProgress
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nlayout(location
            = 0) out highp vec4 SV_Target0;\nfloat u_xlat0;\nvec2 u_xlat1;\nint u_xlati2;\nmediump
            float u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nbool
            u_xlatb5;\nint u_xlati6;\nvoid main()\n{\n    u_xlat0 = float(0.0);\n   
            for(int u_xlati_loop_1 = int(0) ; u_xlati_loop_1<15 ; u_xlati_loop_1++)\n   
            {\n        u_xlat4 = float(u_xlati_loop_1);\n        u_xlat1.x = u_xlat4
            * 0.0714285746;\n        u_xlat4 = u_xlat0;\n        for(int u_xlati_loop_2
            = 0 ; u_xlati_loop_2<15 ; u_xlati_loop_2++)\n        {\n            u_xlat5
            = float(u_xlati_loop_2);\n            u_xlat1.y = u_xlat5 * 0.0714285746;\n           
            u_xlat16_3 = texture(_MainTex, u_xlat1.xy).x;\n            u_xlat4 =
            u_xlat4 + u_xlat16_3;\n        }\n        u_xlat0 = u_xlat4;\n    }\n   
            SV_Target0 = vec4(u_xlat0) * vec4(0.00444444455, 0.00444444455, 0.00444444455,
            0.00444444455);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        definedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        keywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 33
        PlatformMask: -1
      - ShaderName: ScratchCard/MaskProgress
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _SourceTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _MainTex;\nlayout(location = 0) out highp vec4
            SV_Target0;\nvec2 u_xlat0;\nvec2 u_xlat1;\nfloat u_xlat2;\nmediump float
            u_xlat16_2;\nbool u_xlatb2;\nmediump float u_xlat16_4;\nint u_xlati6;\nvec2
            u_xlat7;\nfloat u_xlat9;\nint u_xlati9;\nbool u_xlatb9;\nvoid main()\n{\n   
            u_xlat0.x = float(0.0);\n    u_xlat0.y = float(0.0);\n    for(int u_xlati_loop_1
            = int(0) ; u_xlati_loop_1<15 ; u_xlati_loop_1++)\n    {\n        u_xlat9
            = float(u_xlati_loop_1);\n        u_xlat1.x = u_xlat9 * 0.0714285746;\n       
            u_xlat7.xy = u_xlat0.yx;\n        for(int u_xlati_loop_2 = 0 ; u_xlati_loop_2<15
            ; u_xlati_loop_2++)\n        {\n            u_xlat2 = float(u_xlati_loop_2);\n           
            u_xlat1.y = u_xlat2 * 0.0714285746;\n            u_xlat16_2 = texture(_SourceTex,
            u_xlat1.xy).w;\n            u_xlat7.y = u_xlat7.y + u_xlat16_2;\n           
            u_xlat16_4 = texture(_MainTex, u_xlat1.xy).x;\n            u_xlat7.x
            = u_xlat16_4 * u_xlat16_2 + u_xlat7.x;\n        }\n        u_xlat0.xy
            = u_xlat7.yx;\n    }\n    u_xlat0.xy = u_xlat0.xy * vec2(0.00444444455,
            0.00444444455);\n    SV_Target0 = u_xlat0.yyyy / u_xlat0.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        definedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        keywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 33
        PlatformMask: -1
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
      UsePass: 0
    Shader: {fileID: 4800000, guid: 416d7cfe5d2da4988959de9a6c288abc, type: 3}
    ShaderPath: Assets/ScratchCard/Shaders/MaskProgress.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    shaderCompilerPlatform: 9
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderName: Sprites/Default
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _RendererColor;\nuniform \tmediump vec2 _Flip;\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    u_xlat0
            = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _RendererColor;\nuniform
            \tmediump vec2 _Flip;\nuniform \tmediump vec4 _Color;\nin highp vec4
            in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy * _Flip.xy;\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0.xy = u_xlat0.xy / u_xlat0.ww;\n   
            u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat0.xy = u_xlat0.xy
            * u_xlat1.xy;\n    u_xlat0.xy = roundEven(u_xlat0.xy);\n    u_xlat0.xy
            = u_xlat0.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat0.ww * u_xlat0.xy;\n   
            gl_Position.zw = u_xlat0.zw;\n    u_xlat0 = in_COLOR0 * _Color;\n   
            u_xlat0 = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - PIXELSNAP_ON
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        definedKeywords:
        - ETC1_EXTERNAL_ALPHA
        - INSTANCING_ON
        - PIXELSNAP_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        - __
        keywordGroups:
        - Keywords:
          - _
          - ETC1_EXTERNAL_ALPHA
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - _
          - PIXELSNAP_ON
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 1
        PlatformMask: -1
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
      UsePass: 0
    Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - PIXELSNAP_ON
    - ETC1_EXTERNAL_ALPHA
    - INSTANCING_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    shaderCompilerPlatform: 9
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderName: UI/Default
        ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x
            = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n   
            u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1
            + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0
            = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump
            float u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n    u_xlat16_0.x =
            vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n   
            u_xlat16_2 = u_xlat16_0.w * u_xlat1.w + -0.00100000005;\n    u_xlatb3
            = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump float
            u_xlat16_4;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy
            * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n   
            u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_4 = vs_COLOR0.w * 255.0;\n   
            u_xlat16_4 = roundEven(u_xlat16_4);\n    u_xlat16_0.w = u_xlat16_4 *
            0.00392156886;\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat2 = u_xlat16_2 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat2;\n    u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n   
            SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat16_1);\n    SV_Target0.w =
            u_xlat16_1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 2
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump
            float u_xlat16_5;\nvoid main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n   
            u_xlat16_0.x = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x
            * 0.00392156886;\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy
            * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n   
            u_xlat16_2 = u_xlat1.y * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2
            + -0.00100000005;\n    u_xlat16_2 = u_xlat0.w * u_xlat16_2;\n    SV_Target0.xyz
            = u_xlat0.xyz * vec3(u_xlat16_2);\n    SV_Target0.w = u_xlat16_2;\n   
            u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 3
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        definedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - UNITY_UI_CLIP_RECT
        - _
        keywordGroups:
        - Keywords:
          - _
          - UNITY_UI_CLIP_RECT
        - Keywords:
          - _
          - UNITY_UI_ALPHACLIP
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        ShaderCompilerPlatform: 9
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PassShaderRequirements: 1
        PlatformMask: -1
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
      UsePass: 0
    Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    shaderCompilerPlatform: 9
  _modifiedShaders: []
  invalidShaders: 0
  _cachedShadersPlatform: 9
  _sceneLightData:
    PointLightCount: 0
    SpotLightCount: 0
    DirectionalLightCount: 0
    LightmapOn: 0
    DirlightmapCombined: 0
    DirectionalCookieExists: 0
    PointCookieExists: 0
    SpotCookieExists: 0
    AddiitonalLightsKeywordRequired: 1
